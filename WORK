import java.util.Iterator;

public class DoubleStack<item> implements Iterable<item>{
//create the size
private int size;
// create the First Node
private Node<item> first; 


    public Doublestack(){




}
    public boolean empty(){
return first == null; 
}
    public int size(){
return size; 
}

// Add to the begining 
    public void pushTop(Item item){
Node<item> oldFirst = first; 
first = new Node<item>();
first.item = item;
first.next = oldFirst;
size++;
}
    public void pushBottom(Item item){


}
// remove from top 
    public Item popTop(){
item kill = null; 
if(!isEmpty()){
kill = first.item;
first = first.next;
size--;
}

}
    public Item popBottom(){
}




    public Iterator<item> iterator() {
        return null;
    }
    public static void main(String[] args){
        
    }
}
